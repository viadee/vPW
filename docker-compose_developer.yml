version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    profiles:
     - backend
     - polling-client-local
     - all
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka

  kafka:
    image: confluentinc/cp-kafka:latest
    profiles:
      - backend
      - polling-client-local
      - all
    hostname: kafka
    ports:
      - 9092:9092
      - 9193:9193
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_LOCALHOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9192,PLAINTEXT_HOST://kafka:9092,PLAINTEXT_LOCALHOST://localhost:9193
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: KAFKA_LOG4J_LOGGERS=org.apache.zookeeper=INFO,org.apache.kafka=INFO,kafka=INFO,kafka.cluster=INFO,kafka.controller=INFO,kafka.coordinator=INFO,kafka.log=INFO,kafka.server=INFO,kafka.zookeeper=INFO,state.change.logger=INFO
    networks:
      - kafka

  kafka-manager:
    image: zenko/kafka-manager:latest
    profiles:
      - backend
        #     - polling-client-local
      - all
    ports:
      - 9000:9000
    depends_on:
      - kafka
      - zookeeper
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    networks:
      - kafka

  elasticsearch:
    image: elasticsearch:7.14.1
    profiles:
      - frontend
      - all
    environment:
      - cluster.name=vpw
      - discovery.type=single-node
    # Enable the option below to limit resource consumption for elasticsearch.
    # - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    networks:
      - elastic
    ports:
      - 9200:9200

  kibana:
    image: kibana:7.14.1
    profiles:
      - frontend
      - all
    ports:
      - 5601:5601
    networks:
      - elastic
    depends_on:
      - elasticsearch

  analyzer-postgres:
    profiles:
      - frontend
      - all
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: vpw
      POSTGRES_USER: vpw
      POSTGRES_PASSWORD: vpw
    ports:
      - 5433:5432
    networks:
      - analyzer

  camunda-db:
    image: postgres:13.6
    environment:
      POSTGRES_DB: process-engine
      POSTGRES_USER: camunda
      POSTGRES_PASSWORD: camunda
      TZ: Europe/Berlin
    ports:
      - 5432:5432
    profiles:
      - windshield-claim-local
    networks:
      - camunda

  camunda-process-application:
    image: camunda/camunda-bpm-platform:7.15.0
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: jdbc:postgresql://camunda-db:5432/process-engine
      DB_USERNAME: camunda
      DB_PASSWORD: camunda
      LDAP_ENABLED: "false"
      REST_AUTH_ENABLED: "false"
      CAMUNDA_USERNAME: demo
      CAMUNDA_PASSWORD: demo
      TZ: Europe/Berlin
      WAIT_FOR: camunda-db:5432
    ports:
      - 8081:8080
    profiles:
      - backend
      - polling-client-local
      - all
      - windshield-claim-local
    networks:
      - camunda
    volumes:
      - ./pg-data:/var/lib/postgresql/data

  vpw-polling-client:
    image: public.ecr.aws/viadee/camunda-kafka-polling-client:latest
    profiles:
      - backend
      - all
    depends_on:
      - kafka
    networks:
      - camunda
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: rest
      CAMUNDA_REST_URL: http://camunda-process-application:8080/engine-rest/
      KAFKA_BOOTSTRAP_SERVERS: kafka:9192
      polling_repository-data_initial-timestamp: "2000-01-01 00:00:00"
      polling_runtime-data_last-polled-file: /data/lastPolled-runtime.properties
      polling_repository-data_last-polled-file: /data/lastPolled-repository.properties

  vpw-frontend:
    image: public.ecr.aws/viadee/vpw-frontend:latest
    profiles:
      - frontend
      - all
    depends_on:
      - camunda-process-application
      - kafka
      - analyzer-postgres
    ports:
      - 8080:8080
    command: sh ./local-nginx-startup.sh
    extra_hosts:
      - "host.docker.internal:host-gateway"

  vpw-analyzer:
    image: public.ecr.aws/viadee/vpw-analyzer:latest
    profiles:
      - frontend
      - all
    depends_on:
      - analyzer-postgres
      - camunda-process-application
      - kafka
      - elasticsearch
    networks:
      - analyzer
      - elastic
    ports:
      - 9080:9080
    environment:
      LOGGING_LEVEL: debug
      POSTGRESQL_HOST: analyzer-postgres
      SPRING_ELASTICSEARCH_REST_URIS: http://elasticsearch:9200

  vpw-pipeline:
    image: public.ecr.aws/viadee/vpw-pipeline:latest
    profiles:
      - frontend
      - all
    depends_on:
      - vpw-analyzer
      - analyzer-postgres
      - camunda-process-application
      - kafka
      - elasticsearch
    ports:
      - 9081:9080
    networks:
      - elastic
      - kafka
      - analyzer
    environment:
      KAFKA_BOOTSTRAP_SERVERS: http://kafka:9092
      PROCESS_DEFINITION_REST_URL: http://vpw-analyzer:9080/processDefinitions
      LOGGING_LEVEL: debug
      SPRING_ELASTICSEARCH_REST_URIS: http://elasticsearch:9200
    restart: on-failure

networks:
  kafka:
  elastic:
  camunda:
  analyzer:
